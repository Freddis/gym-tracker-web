/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WorkoutsIndexImport } from './routes/workouts/index'
import { Route as FeedIndexImport } from './routes/feed/index'
import { Route as ExercisesIndexImport } from './routes/exercises/index'
import { Route as ExercisesCreateImport } from './routes/exercises/create'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as WorkoutsUpdateWorkoutIdImport } from './routes/workouts/update/$workoutId'
import { Route as ExercisesUpdateExerciseIdImport } from './routes/exercises/update/$exerciseId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkoutsIndexRoute = WorkoutsIndexImport.update({
  id: '/workouts/',
  path: '/workouts/',
  getParentRoute: () => rootRoute,
} as any)

const FeedIndexRoute = FeedIndexImport.update({
  id: '/feed/',
  path: '/feed/',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesIndexRoute = ExercisesIndexImport.update({
  id: '/exercises/',
  path: '/exercises/',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesCreateRoute = ExercisesCreateImport.update({
  id: '/exercises/create',
  path: '/exercises/create',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const WorkoutsUpdateWorkoutIdRoute = WorkoutsUpdateWorkoutIdImport.update({
  id: '/workouts/update/$workoutId',
  path: '/workouts/update/$workoutId',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesUpdateExerciseIdRoute = ExercisesUpdateExerciseIdImport.update({
  id: '/exercises/update/$exerciseId',
  path: '/exercises/update/$exerciseId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/exercises/create': {
      id: '/exercises/create'
      path: '/exercises/create'
      fullPath: '/exercises/create'
      preLoaderRoute: typeof ExercisesCreateImport
      parentRoute: typeof rootRoute
    }
    '/exercises/': {
      id: '/exercises/'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof ExercisesIndexImport
      parentRoute: typeof rootRoute
    }
    '/feed/': {
      id: '/feed/'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof FeedIndexImport
      parentRoute: typeof rootRoute
    }
    '/workouts/': {
      id: '/workouts/'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof WorkoutsIndexImport
      parentRoute: typeof rootRoute
    }
    '/exercises/update/$exerciseId': {
      id: '/exercises/update/$exerciseId'
      path: '/exercises/update/$exerciseId'
      fullPath: '/exercises/update/$exerciseId'
      preLoaderRoute: typeof ExercisesUpdateExerciseIdImport
      parentRoute: typeof rootRoute
    }
    '/workouts/update/$workoutId': {
      id: '/workouts/update/$workoutId'
      path: '/workouts/update/$workoutId'
      fullPath: '/workouts/update/$workoutId'
      preLoaderRoute: typeof WorkoutsUpdateWorkoutIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/exercises/create': typeof ExercisesCreateRoute
  '/exercises': typeof ExercisesIndexRoute
  '/feed': typeof FeedIndexRoute
  '/workouts': typeof WorkoutsIndexRoute
  '/exercises/update/$exerciseId': typeof ExercisesUpdateExerciseIdRoute
  '/workouts/update/$workoutId': typeof WorkoutsUpdateWorkoutIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/exercises/create': typeof ExercisesCreateRoute
  '/exercises': typeof ExercisesIndexRoute
  '/feed': typeof FeedIndexRoute
  '/workouts': typeof WorkoutsIndexRoute
  '/exercises/update/$exerciseId': typeof ExercisesUpdateExerciseIdRoute
  '/workouts/update/$workoutId': typeof WorkoutsUpdateWorkoutIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/exercises/create': typeof ExercisesCreateRoute
  '/exercises/': typeof ExercisesIndexRoute
  '/feed/': typeof FeedIndexRoute
  '/workouts/': typeof WorkoutsIndexRoute
  '/exercises/update/$exerciseId': typeof ExercisesUpdateExerciseIdRoute
  '/workouts/update/$workoutId': typeof WorkoutsUpdateWorkoutIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/exercises/create'
    | '/exercises'
    | '/feed'
    | '/workouts'
    | '/exercises/update/$exerciseId'
    | '/workouts/update/$workoutId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/exercises/create'
    | '/exercises'
    | '/feed'
    | '/workouts'
    | '/exercises/update/$exerciseId'
    | '/workouts/update/$workoutId'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/exercises/create'
    | '/exercises/'
    | '/feed/'
    | '/workouts/'
    | '/exercises/update/$exerciseId'
    | '/workouts/update/$workoutId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  ExercisesCreateRoute: typeof ExercisesCreateRoute
  ExercisesIndexRoute: typeof ExercisesIndexRoute
  FeedIndexRoute: typeof FeedIndexRoute
  WorkoutsIndexRoute: typeof WorkoutsIndexRoute
  ExercisesUpdateExerciseIdRoute: typeof ExercisesUpdateExerciseIdRoute
  WorkoutsUpdateWorkoutIdRoute: typeof WorkoutsUpdateWorkoutIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  ExercisesCreateRoute: ExercisesCreateRoute,
  ExercisesIndexRoute: ExercisesIndexRoute,
  FeedIndexRoute: FeedIndexRoute,
  WorkoutsIndexRoute: WorkoutsIndexRoute,
  ExercisesUpdateExerciseIdRoute: ExercisesUpdateExerciseIdRoute,
  WorkoutsUpdateWorkoutIdRoute: WorkoutsUpdateWorkoutIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/register",
        "/exercises/create",
        "/exercises/",
        "/feed/",
        "/workouts/",
        "/exercises/update/$exerciseId",
        "/workouts/update/$workoutId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/exercises/create": {
      "filePath": "exercises/create.tsx"
    },
    "/exercises/": {
      "filePath": "exercises/index.tsx"
    },
    "/feed/": {
      "filePath": "feed/index.tsx"
    },
    "/workouts/": {
      "filePath": "workouts/index.tsx"
    },
    "/exercises/update/$exerciseId": {
      "filePath": "exercises/update/$exerciseId.tsx"
    },
    "/workouts/update/$workoutId": {
      "filePath": "workouts/update/$workoutId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
