// This file is auto-generated by @hey-api/openapi-ts

export type GetEntriesData = {
  body?: never;
  path?: never;
  query?: {
    page?: number;
    type?:
      | "steps"
      | "weather"
      | "calories"
      | "food"
      | "activity"
      | "weight"
      | "consumedcalories"
      | "drink"
      | "heartrate"
      | "status"
      | "bodymetrics"
      | "workout_log"
      | "sleepreport"
      | "fitnesstest";
  };
  url: "/entries";
};

export type GetEntriesErrors = {
  /**
   * Action Error or Validation Error
   */
  400:
    | {
        /**
         * Code to handle on the frontend.
         */
        code: "actionError";
        /**
         * Subcategory of error.
         */
        actionErrorCode:
          | "cannotCreateDeposit"
          | "invalidPassword"
          | "invalidTotpCode"
          | "totpNotEnabled"
          | "totpAlreadyEnabled";
        /**
         * Description of the error. Can be safely displayed.
         */
        humanReadable: string;
      }
    | {
        /**
         * Code to handle on the frontend.
         */
        code: "validationFailed";
        fieldErrors?: Array<{
          /**
           * Name of the field
           */
          field: string;
          /**
           * Error message
           */
          message: string;
          fieldErrors: Array<{
            /**
             * Name of the field
             */
            field: string;
            /**
             * Error message
             */
            message: string;
          }>;
        }>;
      };
  /**
   * Validation Error Response
   */
  422: {
    /**
     * Code to handle on the frontend.
     */
    code: "validationFailed";
    fieldErrors?: Array<{
      /**
       * Name of the field
       */
      field: string;
      /**
       * Error message
       */
      message: string;
      fieldErrors: Array<{
        /**
         * Name of the field
         */
        field: string;
        /**
         * Error message
         */
        message: string;
      }>;
    }>;
  };
  /**
   * Unhandled Error
   */
  500: {
    /**
     * Error response
     */
    error: {
      /**
       * Code to handle on the frontend
       */
      code: "unknownError";
    };
  };
};

export type GetEntriesError = GetEntriesErrors[keyof GetEntriesErrors];

export type GetEntriesResponses = {
  /**
   * Good Response
   */
  200: {
    /**
     * Page or items
     */
    items: Array<
      | {
          id: number;
          externalId: string;
          type: "steps";
          data?: unknown;
          createdAt: string;
          updatedAt: string | null;
          subtype: null;
        }
      | {
          id: number;
          externalId: string;
          type: "activity";
          subtype: "workout";
          data: {
            id: number;
            type: "activity";
            created: number;
            user_id: number;
            timestamp: number;
            subtype: "workout";
            activeDuration: number;
            duration: number;
            calories: number;
            TotalExercisesInWorkout?: number;
            end: number;
            start: number;
            exercises: Array<{
              exercise_id: string;
              exercise_name: string;
              exercise_type: string;
              sets: Array<{
                draft: boolean;
                reps: number;
                weight: number;
              }>;
            }>;
          };
          createdAt: string;
          updatedAt: string | null;
        }
      | {
          id: number;
          externalId: string;
          type: "weather";
          subtype: null;
          data: {
            id: number;
            type: "weather";
            created: number;
            user_id: number;
            timestamp: number;
            temperature_current: number;
            temperature_high: number;
            temperature_low: number;
          };
          createdAt: string;
          updatedAt: string | null;
        }
      | {
          id: number;
          externalId: string;
          type: "activity";
          subtype: "weightlifting";
          data?: unknown;
          createdAt: string;
          updatedAt: string | null;
        }
      | {
          id: number;
          externalId: string;
          type: "weight";
          subtype: null;
          data: {
            id: number;
            type: "weight";
            created: number;
            user_id: number;
            timestamp: number;
            value: number;
          };
          createdAt: string;
          updatedAt: string | null;
        }
      | {
          id: number;
          externalId: string;
          type: "activity";
          subtype: "walking";
          data?: unknown;
          createdAt: string;
          updatedAt: string | null;
        }
      | {
          id: number;
          externalId: string;
          type: "calories";
          subtype: null;
          data?: unknown;
          createdAt: string;
          updatedAt: string | null;
        }
    >;
    /**
     * Pagination details
     */
    info: {
      /**
       * Total number of items
       */
      count: number;
      /**
       * Current page
       */
      page: number;
      /**
       * Number of items per page
       */
      pageSize: number;
    };
  };
};

export type GetEntriesResponse = GetEntriesResponses[keyof GetEntriesResponses];

export type GetEntryTypesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/entryTypes";
};

export type GetEntryTypesErrors = {
  /**
   * Action Error or Validation Error
   */
  400:
    | {
        /**
         * Code to handle on the frontend.
         */
        code: "actionError";
        /**
         * Subcategory of error.
         */
        actionErrorCode:
          | "cannotCreateDeposit"
          | "invalidPassword"
          | "invalidTotpCode"
          | "totpNotEnabled"
          | "totpAlreadyEnabled";
        /**
         * Description of the error. Can be safely displayed.
         */
        humanReadable: string;
      }
    | {
        /**
         * Code to handle on the frontend.
         */
        code: "validationFailed";
        fieldErrors?: Array<{
          /**
           * Name of the field
           */
          field: string;
          /**
           * Error message
           */
          message: string;
          fieldErrors: Array<{
            /**
             * Name of the field
             */
            field: string;
            /**
             * Error message
             */
            message: string;
          }>;
        }>;
      };
  /**
   * Validation Error Response
   */
  422: {
    /**
     * Code to handle on the frontend.
     */
    code: "validationFailed";
    fieldErrors?: Array<{
      /**
       * Name of the field
       */
      field: string;
      /**
       * Error message
       */
      message: string;
      fieldErrors: Array<{
        /**
         * Name of the field
         */
        field: string;
        /**
         * Error message
         */
        message: string;
      }>;
    }>;
  };
  /**
   * Unhandled Error
   */
  500: {
    /**
     * Error response
     */
    error: {
      /**
       * Code to handle on the frontend
       */
      code: "unknownError";
    };
  };
};

export type GetEntryTypesError = GetEntryTypesErrors[keyof GetEntryTypesErrors];

export type GetEntryTypesResponses = {
  /**
   * Good Response
   */
  200: {
    items: Array<
      | "steps"
      | "weather"
      | "calories"
      | "food"
      | "activity"
      | "weight"
      | "consumedcalories"
      | "drink"
      | "heartrate"
      | "status"
      | "bodymetrics"
      | "workout_log"
      | "sleepreport"
      | "fitnesstest"
    >;
  };
};

export type GetEntryTypesResponse =
  GetEntryTypesResponses[keyof GetEntryTypesResponses];

export type ClientOptions = {
  baseURL: "http://localhost:3000/api/v1" | (string & {});
};
