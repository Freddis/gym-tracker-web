openapi: 3.1.0
info:
  title: My API
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Local
paths:
  /auth/register:
    post:
      description: Registers a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 5
                passwordConfirmation:
                  type: string
              required:
                - name
                - email
                - password
                - passwordConfirmation
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  name:
                    type: string
                  jwt:
                    type: string
                required:
                  - id
                  - email
                  - name
                  - jwt
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
  /auth/login:
    post:
      description: Logins a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 5
              required:
                - email
                - password
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  name:
                    type: string
                  jwt:
                    type: string
                required:
                  - id
                  - email
                  - name
                  - jwt
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
  /exercises/:
    post:
      description: Adds new exercise to the user personal library
      security:
        - bearerHttpAuthentication: []
          cookieUserAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                  - success
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - unauthorized
                          - userNotFound
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
        "403":
          description: Permission Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: missingPermission
                        description: Code to handle on the frontend
                      permissions:
                        type: array
                        items:
                          type: string
                          enum:
                            - clientRead
                        description: List of possible permissions to allow access
                    required:
                      - code
                      - permissions
                    description: Error response
                required:
                  - error
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
    get:
      description: Returns data on exercises available to the user
      security:
        - bearerHttpAuthentication: []
          cookieUserAuthentication: []
      parameters:
        - in: query
          name: page
          schema:
            type: number
            default: 1
        - in: query
          name: type
          schema:
            type: string
            enum:
              - steps
              - weather
              - calories
              - food
              - activity
              - weight
              - consumedcalories
              - drink
              - heartrate
              - status
              - bodymetrics
              - workout_log
              - sleepreport
              - fitnesstest
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          minimum: -2147483648
                          maximum: 2147483647
                        name:
                          type: string
                        description:
                          type:
                            - string
                            - "null"
                        difficulty:
                          type:
                            - integer
                            - "null"
                          minimum: -2147483648
                          maximum: 2147483647
                        equipmentId:
                          type: integer
                          minimum: -2147483648
                          maximum: 2147483647
                        images:
                          type: array
                          items:
                            type: string
                        params:
                          type: array
                          items:
                            type: integer
                            minimum: -2147483648
                            maximum: 2147483647
                        userId:
                          type:
                            - integer
                            - "null"
                          minimum: -2147483648
                          maximum: 2147483647
                        copiedFromId:
                          type:
                            - integer
                            - "null"
                          minimum: -2147483648
                          maximum: 2147483647
                        parentExerciseId:
                          type:
                            - integer
                            - "null"
                          minimum: -2147483648
                          maximum: 2147483647
                        createdAt:
                          type: string
                        updatedAt:
                          type:
                            - string
                            - "null"
                      required:
                        - id
                        - name
                        - description
                        - difficulty
                        - equipmentId
                        - images
                        - params
                        - userId
                        - copiedFromId
                        - parentExerciseId
                        - createdAt
                        - updatedAt
                required:
                  - items
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - unauthorized
                          - userNotFound
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
        "403":
          description: Permission Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: missingPermission
                        description: Code to handle on the frontend
                      permissions:
                        type: array
                        items:
                          type: string
                          enum:
                            - clientRead
                        description: List of possible permissions to allow access
                    required:
                      - code
                      - permissions
                    description: Error response
                required:
                  - error
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
  /exercises/{id}:
    get:
      description: Returns data on exercises available to the user
      security:
        - bearerHttpAuthentication: []
          cookieUserAuthentication: []
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    type: object
                    properties:
                      id:
                        type: integer
                        minimum: -2147483648
                        maximum: 2147483647
                      name:
                        type: string
                      description:
                        type:
                          - string
                          - "null"
                      difficulty:
                        type:
                          - integer
                          - "null"
                        minimum: -2147483648
                        maximum: 2147483647
                      equipmentId:
                        type: integer
                        minimum: -2147483648
                        maximum: 2147483647
                      images:
                        type: array
                        items:
                          type: string
                      params:
                        type: array
                        items:
                          type: integer
                          minimum: -2147483648
                          maximum: 2147483647
                      userId:
                        type:
                          - integer
                          - "null"
                        minimum: -2147483648
                        maximum: 2147483647
                      copiedFromId:
                        type:
                          - integer
                          - "null"
                        minimum: -2147483648
                        maximum: 2147483647
                      parentExerciseId:
                        type:
                          - integer
                          - "null"
                        minimum: -2147483648
                        maximum: 2147483647
                      createdAt:
                        type: string
                      updatedAt:
                        type:
                          - string
                          - "null"
                    required:
                      - id
                      - name
                      - description
                      - difficulty
                      - equipmentId
                      - images
                      - params
                      - userId
                      - copiedFromId
                      - parentExerciseId
                      - createdAt
                      - updatedAt
                required:
                  - item
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - unauthorized
                          - userNotFound
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
        "403":
          description: Permission Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: missingPermission
                        description: Code to handle on the frontend
                      permissions:
                        type: array
                        items:
                          type: string
                          enum:
                            - clientRead
                        description: List of possible permissions to allow access
                    required:
                      - code
                      - permissions
                    description: Error response
                required:
                  - error
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
    patch:
      description: Adds new exercise to the user personal library
      security:
        - bearerHttpAuthentication: []
          cookieUserAuthentication: []
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                  - success
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - unauthorized
                          - userNotFound
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
        "403":
          description: Permission Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: missingPermission
                        description: Code to handle on the frontend
                      permissions:
                        type: array
                        items:
                          type: string
                          enum:
                            - clientRead
                        description: List of possible permissions to allow access
                    required:
                      - code
                      - permissions
                    description: Error response
                required:
                  - error
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
    delete:
      description: Deletes exercise to the user personal library
      security:
        - bearerHttpAuthentication: []
          cookieUserAuthentication: []
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                  - success
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - unauthorized
                          - userNotFound
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
        "403":
          description: Permission Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: missingPermission
                        description: Code to handle on the frontend
                      permissions:
                        type: array
                        items:
                          type: string
                          enum:
                            - clientRead
                        description: List of possible permissions to allow access
                    required:
                      - code
                      - permissions
                    description: Error response
                required:
                  - error
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
  /entries/:
    get:
      description: Returns data on all entries from Argus
      parameters:
        - in: query
          name: page
          schema:
            type: number
            default: 1
        - in: query
          name: type
          schema:
            type: string
            enum:
              - steps
              - weather
              - calories
              - food
              - activity
              - weight
              - consumedcalories
              - drink
              - heartrate
              - status
              - bodymetrics
              - workout_log
              - sleepreport
              - fitnesstest
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: steps
                            data: {}
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                            subtype:
                              type: "null"
                          required:
                            - id
                            - externalId
                            - type
                            - createdAt
                            - updatedAt
                            - subtype
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: activity
                            subtype:
                              type: string
                              const: workout
                            data:
                              type: object
                              properties:
                                id:
                                  type: number
                                type:
                                  type: string
                                  const: activity
                                created:
                                  type: number
                                user_id:
                                  type: number
                                timestamp:
                                  type: number
                                subtype:
                                  type: string
                                  const: workout
                                activeDuration:
                                  type: number
                                duration:
                                  type: number
                                calories:
                                  type: number
                                TotalExercisesInWorkout:
                                  type: number
                                end:
                                  type: number
                                start:
                                  type: number
                                exercises:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      exercise_id:
                                        type: string
                                      exercise_name:
                                        type: string
                                      exercise_type:
                                        type: string
                                      sets:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            draft:
                                              type: boolean
                                            reps:
                                              type: number
                                            weight:
                                              type: number
                                          required:
                                            - draft
                                            - reps
                                            - weight
                                    required:
                                      - exercise_id
                                      - exercise_name
                                      - exercise_type
                                      - sets
                              required:
                                - id
                                - type
                                - created
                                - user_id
                                - timestamp
                                - subtype
                                - activeDuration
                                - duration
                                - calories
                                - end
                                - start
                                - exercises
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                          required:
                            - id
                            - externalId
                            - type
                            - subtype
                            - data
                            - createdAt
                            - updatedAt
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: weather
                            subtype:
                              type: "null"
                            data:
                              type: object
                              properties:
                                id:
                                  type: number
                                type:
                                  type: string
                                  const: weather
                                created:
                                  type: number
                                user_id:
                                  type: number
                                timestamp:
                                  type: number
                                temperature_current:
                                  type: number
                                temperature_high:
                                  type: number
                                temperature_low:
                                  type: number
                              required:
                                - id
                                - type
                                - created
                                - user_id
                                - timestamp
                                - temperature_current
                                - temperature_high
                                - temperature_low
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                          required:
                            - id
                            - externalId
                            - type
                            - subtype
                            - data
                            - createdAt
                            - updatedAt
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: activity
                            subtype:
                              type: string
                              const: weightlifting
                            data: {}
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                          required:
                            - id
                            - externalId
                            - type
                            - subtype
                            - createdAt
                            - updatedAt
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: weight
                            subtype:
                              type: "null"
                            data:
                              type: object
                              properties:
                                id:
                                  type: number
                                type:
                                  type: string
                                  const: weight
                                created:
                                  type: number
                                user_id:
                                  type: number
                                timestamp:
                                  type: number
                                value:
                                  type: number
                              required:
                                - id
                                - type
                                - created
                                - user_id
                                - timestamp
                                - value
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                          required:
                            - id
                            - externalId
                            - type
                            - subtype
                            - data
                            - createdAt
                            - updatedAt
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: activity
                            subtype:
                              type: string
                              const: walking
                            data: {}
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                          required:
                            - id
                            - externalId
                            - type
                            - subtype
                            - createdAt
                            - updatedAt
                        - type: object
                          properties:
                            id:
                              type: integer
                              minimum: -2147483648
                              maximum: 2147483647
                            externalId:
                              type: string
                            type:
                              type: string
                              const: calories
                            subtype:
                              type: "null"
                            data: {}
                            createdAt:
                              type: string
                            updatedAt:
                              type:
                                - string
                                - "null"
                          required:
                            - id
                            - externalId
                            - type
                            - subtype
                            - createdAt
                            - updatedAt
                    description: Page or items
                  info:
                    type: object
                    properties:
                      count:
                        type: number
                        description: Total number of items
                      page:
                        type: number
                        description: Current page
                      pageSize:
                        type: number
                        description: Number of items per page
                    required:
                      - count
                      - page
                      - pageSize
                    description: Pagination details
                required:
                  - items
                  - info
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
  /entries/types:
    get:
      description: Returns possible entry types for Argus
      security:
        - bearerHttpAuthentication: []
          cookieUserAuthentication: []
      responses:
        "200":
          description: Good Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: string
                      enum:
                        - steps
                        - weather
                        - calories
                        - food
                        - activity
                        - weight
                        - consumedcalories
                        - drink
                        - heartrate
                        - status
                        - bodymetrics
                        - workout_log
                        - sleepreport
                        - fitnesstest
                required:
                  - items
        "400":
          description: Action Error or Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        const: actionError
                        description: Code to handle on the frontend.
                      actionErrorCode:
                        type: string
                        enum:
                          - invalidPassword
                          - emailAlreadyExists
                        description: Subcategory of error.
                      humanReadable:
                        type: string
                        description: Description of the error. Can be safely displayed.
                    required:
                      - code
                      - actionErrorCode
                      - humanReadable
                    description: Action Error
                  - type: object
                    properties:
                      code:
                        type: string
                        const: validationFailed
                        description: Code to handle on the frontend.
                      fieldErrors:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Name of the field
                            message:
                              type: string
                              description: Error message
                            fieldErrors:
                              type: array
                              items:
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: Name of the field
                                  message:
                                    type: string
                                    description: Error message
                                required:
                                  - field
                                  - message
                                description: Field error
                          required:
                            - field
                            - message
                            - fieldErrors
                          description: Field error
                    required:
                      - code
                    description: Validation Error Response
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - unauthorized
                          - userNotFound
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
        "403":
          description: Permission Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: missingPermission
                        description: Code to handle on the frontend
                      permissions:
                        type: array
                        items:
                          type: string
                          enum:
                            - clientRead
                        description: List of possible permissions to allow access
                    required:
                      - code
                      - permissions
                    description: Error response
                required:
                  - error
        "422":
          description: Validation Error on Response. Always server-side problem.
            Introduced for debugging purposes, disabled in prod.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    const: validationFailed
                    description: Code to handle on the frontend.
                  fieldErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Name of the field
                        message:
                          type: string
                          description: Error message
                        fieldErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                                description: Name of the field
                              message:
                                type: string
                                description: Error message
                            required:
                              - field
                              - message
                            description: Field error
                      required:
                        - field
                        - message
                        - fieldErrors
                      description: Field error
                required:
                  - code
                description: Validation Error Response
        "500":
          description: Unhandled Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        const: unknownError
                        description: Code to handle on the frontend
                    required:
                      - code
                    description: Error response
                required:
                  - error
components:
  securitySchemes:
    bearerHttpAuthentication:
      type: apiKey
      scheme: bearer
      bearerFormat: jwt
      name: authorization
      in: header
    cookieClientAuthentication:
      type: apiKey
      bearerFormat: jwt
      name: authtoken
      in: cookie
    cookieUserAuthentication:
      type: apiKey
      bearerFormat: jwt
      name: adminauthtoken
      in: cookie
